@model FoodItem

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>FoodItem</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Calories)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Calories)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Synonyms)
        </dt>
        <dd class="col-sm-10">
            <display-or-fallback display="@Model.GetSynonymsNamesList()" fallback="<none>"></display-or-fallback>
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Units)
        </dt>
        <dd class="col-sm-10">
            @{
                var unitStr = "";
                foreach (var unit in Model.Units)
                {
                    unitStr += $"{unit.FoodUnit.Name} -> {unit.GramsPerUnit}g /pr";
                }
            }
            @(unitStr)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
